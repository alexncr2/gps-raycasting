{"version":3,"sources":["components/CustomSketch.js","components/RayCasting.js","App.js","index.js"],"names":["CustomSketch","lines","useState","walls","setWalls","xoff","setXoff","yoff","setYoff","addWall","aVector","bVector","a","b","particle","setParticle","castRayOnWalls","p5","ray","wall","x1","x","y1","y","x2","y2","dir","Vector","fromAngle","angle","x3","pos","y3","x4","y4","den","t","pt","createVector","createRays","rays","push","radians","setup","canvasParentRef","canvasWidth","window","innerWidth","canvasHeight","innerHeight","line","particlePosition","createCanvas","parent","draw","background","stroke","fill","ellipse","translate","pop","mouseX","mouseY","set","record","Infinity","closestPoint","distance","dist","lookAtWalls","RayCasting","props","getRandomWidth","Math","floor","random","getRandomHeight","count","i","getRandomLines","App","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91460474.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Vector } from \"p5\";\r\n\r\nconst CustomSketch = ({ lines }) => {\r\n\r\n  // boundary (wall)\r\n  const [walls, setWalls] = useState([]);\r\n  const [xoff, setXoff] = useState(0);\r\n  const [yoff, setYoff] = useState(1000);\r\n\r\n  const addWall = (aVector, bVector) => {\r\n    setWalls(walls => [...walls, { a: aVector, b: bVector }]);\r\n  };\r\n\r\n  // particle\r\n  const [particle, setParticle] = useState(null);\r\n\r\n  const castRayOnWalls = (p5, ray, wall) => {\r\n    const x1 = wall.a.x;\r\n    const y1 = wall.a.y;\r\n    const x2 = wall.b.x;\r\n    const y2 = wall.b.y;\r\n\r\n    const dir = Vector.fromAngle(ray.angle);\r\n\r\n    const x3 = particle.pos.x;\r\n    const y3 = particle.pos.y;\r\n    const x4 = particle.pos.x + dir.x;\r\n    const y4 = particle.pos.y + dir.y;\r\n\r\n    const den = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n    if (den === 0) {\r\n      return;\r\n    }\r\n\r\n    const t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / den;\r\n    const u = -((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / den;\r\n\r\n    if (t > 0 && t < 1 && u > 0) {\r\n      let pt = p5.createVector();\r\n      pt.x = x1 + t * (x2 - x1);\r\n      pt.y = y1 + t * (y2 - y1);\r\n      return pt;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  const lookAtWalls = (p5) => {\r\n    for (let ray of particle.rays) {\r\n      let record = Infinity;\r\n      let closestPoint = null;\r\n      for (let wall of walls) {\r\n        const pt = castRayOnWalls(p5, ray, wall);\r\n        if (pt) {\r\n          const distance = Vector.dist(particle.pos, pt);\r\n          // distance = min(distance, record);\r\n          if (distance < record) {\r\n            record = distance;\r\n            closestPoint = pt;\r\n          }\r\n        }\r\n      }\r\n      if (closestPoint) {\r\n        p5.stroke(255, 69);\r\n        p5.line(particle.pos.x, particle.pos.y, closestPoint.x, closestPoint.y);\r\n      }\r\n    }\r\n  }\r\n\r\n  const createRays = (p5, pos) => {\r\n    let rays = [];\r\n    // change angle increment for more rays\r\n    for (let angle = 0; angle < 360; angle += 1) {\r\n      rays.push({\r\n        pos: pos,\r\n        angle: p5.radians(angle)\r\n      });\r\n    }\r\n    return rays;\r\n  }\r\n\r\n  const updateParticlePosition = (x, y) => {\r\n    particle.pos.set(x, y);\r\n  }\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    const canvasWidth = window.innerWidth;\r\n    const canvasHeight = window.innerHeight;\r\n\r\n    for (let line of lines) {\r\n      const a = p5.createVector(line.x1, line.y1);\r\n      const b = p5.createVector(line.x2, line.y2);\r\n      addWall(a, b);\r\n    }\r\n\r\n    // particle\r\n    const particlePosition = p5.createVector(canvasWidth / 2, canvasHeight / 2);\r\n\r\n    setParticle({\r\n      pos: particlePosition,\r\n      rays: (createRays(p5, particlePosition))\r\n    });\r\n\r\n    // sketch\r\n    p5.createCanvas(canvasWidth, canvasHeight).parent(canvasParentRef);\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    // sketch\r\n    p5.background(0);\r\n\r\n    // boundary\r\n    for (let wall of walls) {\r\n      p5.stroke(255);\r\n      p5.line(wall.a.x, wall.a.y, wall.b.x, wall.b.y);\r\n    }\r\n\r\n    // particle - show\r\n    p5.fill(255);\r\n    p5.ellipse(particle.pos.x, particle.pos.y, 4);\r\n    for (let ray of particle.rays) {\r\n      // ray - show\r\n      p5.stroke(255);\r\n      p5.push();\r\n      p5.translate(ray.pos.x, ray.pos.y);\r\n      const dir = Vector.fromAngle(ray.angle);\r\n      p5.line(0, 0, dir.x * 10, dir.y * 10);\r\n      p5.pop();\r\n    }\r\n\r\n    // particle move with mouse or perlin noise\r\n    updateParticlePosition(p5.mouseX, p5.mouseY);\r\n    //updateParticlePosition(p5.noise(xoff) * window.innerWidth, p5.noise(yoff) * window.innerHeight);\r\n\r\n    setXoff(xoff + 0.01);\r\n    setYoff(yoff + 0.01);\r\n\r\n    // particle look at wall\r\n    lookAtWalls(p5);\r\n  };\r\n\r\n  return (\r\n    <Sketch setup={setup} draw={draw} />\r\n  );\r\n};\r\n\r\nexport default CustomSketch;\r\n\r\nCustomSketch.propTypes = {\r\n  lines: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      x1: PropTypes.number,\r\n      y1: PropTypes.number,\r\n      x2: PropTypes.number,\r\n      y2: PropTypes.number\r\n    })\r\n  )\r\n};\r\n","import React from 'react';\r\nimport CustomSketch from './CustomSketch';\r\n\r\nfunction RayCasting(props) {\r\n\r\n  const getRandomWidth = () => {\r\n    return Math.floor(Math.random() * window.innerWidth) + 1;\r\n  }\r\n\r\n  const getRandomHeight = () => {\r\n    return Math.floor(Math.random() * window.innerHeight) + 1;\r\n  }\r\n\r\n  const getRandomLines = (count) => {\r\n    // initialized with border\r\n    let lines = [\r\n      {\r\n        x1: 0,\r\n        y1: 0,\r\n        x2: window.innerWidth,\r\n        y2: 0,\r\n      }, // top \r\n      {\r\n        x1: window.innerWidth,\r\n        y1: 0,\r\n        x2: window.innerWidth,\r\n        y2: window.innerHeight,\r\n      }, // right\r\n      {\r\n        x1: window.innerWidth,\r\n        y1: window.innerHeight,\r\n        x2: 0,\r\n        y2: window.innerHeight,\r\n      }, // bottom\r\n      {\r\n        x1: 0,\r\n        y1: window.innerHeight,\r\n        x2: 0,\r\n        y2: 0,\r\n      }, // left\r\n    ];\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      lines = [...lines, {\r\n        x1: getRandomWidth(), y1: getRandomHeight(),\r\n        x2: getRandomWidth(), y2: getRandomHeight()\r\n      }];\r\n    }\r\n\r\n    return lines;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CustomSketch lines={getRandomLines(5)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RayCasting;\r\n","import React from \"react\";\n\nimport RayCasting from \"./components/RayCasting\";\n\nfunction App() {\n  document.title = \"RayCasting\";\n  return (\n    <RayCasting />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}